name: Code Quality

on:
  workflow_call:
    secrets:
      MAILER_USERNAME:
        required: true
      MAILER_PASSWORD:
        required: true

jobs:
  linters:
    runs-on: ubuntu-latest
    container:
      image: ruby:3.2.2
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Setup application.yml
        run: |
          echo "
              database: &database
                db.username: postgres
                db.password: postgres
                db.host: postgres://postgres:@db

              mailer: &mailer
                mailer.from: 'tcc-tsi-gp@utfpr.edu.br'
                mailer.host: localhost
                mailer.host.port: '3000'
                mailer.smtp: 'smtp.mailtrap.io'
                mailer.smtp.port: '2525'
                mailer.smtp.domain: 'smtp.mailtrap.io'
                mailer.smtp.username: '${{ secrets.MAILER_USERNAME }}'
                mailer.smtp.password: '${{ secrets.MAILER_PASSWORD }}'
                mailer.smtp.authentication: 'cram_md5'
                mailer.exception.prefix: '[SGTCC]'
                mailer.exception.sender: 'SGTCC <tcc-tsi-gp@utfpr.edu.br>'
                mailer.exception.recipient: 'tcc-tsi-gp@utfpr.edu.br'

              ldap: &ldap
                ldap.on: 'false'
              
              development:
                <<: *database
                <<: *mailer
                <<: *ldap
          " > config/application.yml

      - name: Cache bundle gems
        uses: actions/cache@v3
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Install bundle gems
        run: |
          gem install bundler -v 2.4.22
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: 10.24.1

      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install yarn and dependencies
        run: |
          npm install -g yarn
          yarn install
          yarn install --check-files

      - name: Code quality - robocop
        run: |
          bundle exec rubocop --parallel

      - name: Code quality - brakeman
        run: |
          bundle exec brakeman --ignore-config config/brakeman.ignore

      - name: Code quality - eslint
        run: |
          yarn run eslint --ext .vue --ext .js app/javascript
